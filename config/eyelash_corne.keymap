#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    combos {
        compatible = "zmk,combos";

        PREV_MOD {
            bindings = <&rgb_ug RGB_EFR>;
            key-positions = <17 8>;
            layers = <4>;
        };

        DECR_HUE {
            bindings = <&rgb_ug RGB_HUD>;
            key-positions = <17 9>;
            layers = <4>;
        };

        DECR_SAT {
            bindings = <&rgb_ug RGB_SAD>;
            key-positions = <17 10>;
            layers = <4>;
        };

        DECR_VAL {
            bindings = <&rgb_ug RGB_SPD>;
            key-positions = <17 11>;
            layers = <4>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            display-name = "QWERTY";
            bindings = <
&trans  &kp Q           &kp W           &kp F               &kp P             &kp B                          &kp UP                &kp J        &kp L              &kp U         &kp Y            &kp SQT          &trans
&trans  &mt LEFT_GUI A  &mt LEFT_ALT R  &mt LEFT_CONTROL S  &mt LEFT_SHIFT T  &kp G                &kp LEFT  &kp ENTER  &kp RIGHT  &kp M        &mt RIGHT_SHIFT N  &mt RCTRL E   &mt RIGHT_ALT I  &mt RIGHT_GUI O  &trans
&trans  &lt 3 Z         &kp X           &kp C               &kp D             &kp V      &trans              &kp DOWN              &kp K        &kp H              &kp COMMA     &kp DOT          &lt 3 FSLH       &trans
                                        &lt 4 ESCAPE        &lt 1 SPACE       &lt 2 TAB                                            &lt 6 ENTER  &lt 5 BACKSPACE    &lt 7 DELETE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        nav_layer {
            bindings = <
&trans  &trans    &trans    &trans     &trans     &trans                    &trans          &kp K_REDO  &kp K_PASTE  &kp K_COPY     &kp K_CUT     &kp K_UNDO  &trans
&trans  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &trans            &trans  &trans  &trans  &kp CAPS    &kp LEFT     &kp DOWN       &kp UP_ARROW  &kp RIGHT   &trans
&trans  &trans    &trans    &trans     &trans     &trans  &trans            &trans          &kp INSERT  &kp HOME     &kp PAGE_DOWN  &kp PAGE_UP   &kp END     &trans
                            &trans     &trans     &trans                                    &kp ENTER   &kp BSPC     &kp DELETE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        mouse_layer {
            bindings = <
&trans  &trans    &trans    &trans     &trans     &trans                    &trans          &kp K_REDO  &kp K_PASTE     &kp K_COPY      &kp K_CUT     &kp K_UNDO       &trans
&trans  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &trans            &trans  &trans  &trans  &trans      &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &trans
&trans  &trans    &trans    &trans     &trans     &trans  &trans            &trans          &trans      &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP  &msc SCRL_RIGHT  &trans
                            &trans     &trans     &trans                                    &mkp RCLK   &mkp LCLK       &mkp MCLK
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        button_layer {
            bindings = <
&trans  &kp K_UNDO    &kp K_CUT     &kp K_COPY  &kp K_PASTE     &kp K_REDO                    &trans          &kp K_REDO  &kp K_PASTE      &kp K_COPY  &kp K_CUT      &kp K_UNDO     &trans
&trans  &kp LEFT_GUI  &kp LEFT_ALT  &kp LCTRL   &kp LEFT_SHIFT  &trans                &trans  &trans  &trans  &trans      &kp RIGHT_SHIFT  &kp RCTRL   &kp RIGHT_ALT  &kp RIGHT_GUI  &trans
&trans  &kp K_UNDO    &kp K_CUT     &kp K_COPY  &kp K_PASTE     &kp K_REDO  &trans            &trans          &kp K_REDO  &kp K_PASTE      &kp K_COPY  &kp K_CUT      &kp K_UNDO     &trans
                                    &mkp MCLK   &mkp LCLK       &mkp RCLK                                     &mkp RCLK   &mkp LCLK        &mkp MCLK
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        media_layer {
            bindings = <
&trans  &trans        &trans        &trans     &trans          &trans                    &trans          &rgb_ug RGB_TOG    &rgb_ug RGB_EFF   &rgb_ug RGB_HUI    &rgb_ug RGB_SAI  &rgb_ug RGB_SPI  &trans
&trans  &kp LEFT_GUI  &kp LEFT_ALT  &kp LCTRL  &kp LEFT_SHIFT  &trans            &trans  &trans  &trans  &ext_power EP_TOG  &kp C_PREVIOUS    &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_NEXT       &trans
&trans  &trans        &trans        &trans     &trans          &trans  &trans            &trans          &out OUT_TOG       &bt BT_SEL 0      &bt BT_SEL 1       &bt BT_SEL 2     &bt BT_SEL 3     &trans
                                    &trans     &trans          &trans                                    &kp C_STOP         &kp C_PLAY_PAUSE  &kp K_MUTE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        num_layer {
            bindings = <
&trans  &kp LEFT_BRACKET  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp RIGHT_BRACKET                    &trans          &trans  &trans           &trans     &trans         &trans         &trans
&trans  &kp SEMICOLON     &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp EQUAL                    &trans  &trans  &trans  &trans  &kp RIGHT_SHIFT  &kp RCTRL  &kp RIGHT_ALT  &kp RIGHT_GUI  &trans
&trans  &kp GRAVE         &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp BACKSLASH      &trans            &trans          &trans  &trans           &trans     &trans         &trans         &trans
                                        &kp PERIOD    &kp NUMBER_0  &kp MINUS                                            &trans  &trans           &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        sym_layer {
            bindings = <
&trans  &kp LEFT_BRACE  &kp AMPERSAND    &kp ASTERISK          &kp LEFT_PARENTHESIS   &kp RIGHT_BRACE                    &trans          &trans  &trans           &trans     &trans         &trans         &trans
&trans  &kp COLON       &kp DOLLAR       &kp PRCNT             &kp CARET              &kp PLUS                   &trans  &trans  &trans  &trans  &kp RIGHT_SHIFT  &kp RCTRL  &kp RIGHT_ALT  &kp RIGHT_GUI  &trans
&trans  &kp TILDE       &kp EXCLAMATION  &kp AT                &kp HASH               &kp PIPE         &trans            &trans          &trans  &trans           &trans     &trans         &trans         &trans
                                         &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDERSCORE                                     &trans  &trans           &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        fun_layer {
            bindings = <
&trans  &kp F12  &kp F7  &kp F8  &kp F9  &kp PRINTSCREEN                    &trans          &trans  &trans           &trans     &trans         &trans         &trans
&trans  &kp F11  &kp F4  &kp F5  &kp F6  &kp SCROLLLOCK             &trans  &trans  &trans  &trans  &kp RIGHT_SHIFT  &kp RCTRL  &kp RIGHT_ALT  &kp RIGHT_GUI  &trans
&trans  &kp F10  &kp F1  &kp F2  &kp F3  &kp PAUSE_BREAK  &trans            &trans          &trans  &trans           &trans     &trans         &trans         &trans
                         &trans  &trans  &trans                                             &trans  &trans           &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };
    };
};
